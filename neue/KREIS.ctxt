#BlueJ class context
comment0.params=
comment0.target=KREIS()
comment0.text=\r\n\ Konstruktor\ der\ Klasse\ <code>KREIS</code>.\ Erstellt\ einen\ neuen\ Kreis.\r\n
comment1.params=farbe\ radius
comment1.target=KREIS(java.lang.String,\ int)
comment10.params=k
comment10.target=boolean\ schneidet(KREIS)
comment10.text=\r\n\ Diese\ Methode\ prueft\ diesen\ Kreis\ und\ einen\ weiteren\ Kreis\ auf\ Kollision.\r\n\ @param\ \ \ k\ \ \ Der\ Kreis,\ auf\ dessen\ Ueberschneiden\ mit\ dem\ die\ Methode\ ausfuehrenden\ Kreises\ geprueft\ werden\ soll.\r\n\ @return\ \ <code>true</code>,\ wenn\ sich\ beide\ Kreise\ ueberlagern\ -\ also\ schneiden\ -\ sonst\ <code>false</code>.\r\n
comment11.params=r
comment11.target=boolean\ schneidet(RECHTECK)
comment11.text=\r\n\ Diese\ Methode\ prueft\ diesen\ Kreis\ und\ ein\ Rechteck\ auf\ Kollision.\r\n\ @param\ \ \ r\ \ \ Das\ Rechteck,\ auf\ dessen\ Ueberschneiden\ mit\ dem\ die\ Methode\ ausfuehrenden\ Kreis\ geprueft\ werden\ soll.\r\n\ @return\ \ <code>true</code>,\ wenn\ sich\ Kreis\ und\ Rechteck\ ueberlagern\ -\ also\ schneiden\ -\ sonst\ <code>false</code>.\r\n
comment12.params=d
comment12.target=boolean\ schneidet(DREIECK)
comment12.text=\r\n\ Diese\ Methode\ prueft\ dieser\ Kreis\ und\ ein\ Dreieck\ auf\ Kollision.\r\n\ @param\ \ \ d\ \ \ Das\ Dreieck,\ auf\ dessen\ Ueberschneiden\ mit\ dem\ die\ Methode\ ausfuehrenden\ Kreises\ geprueft\ werden\ soll.\r\n\ @return\ \ <code>true</code>,\ wenn\ sich\ Dreieck\ und\ Kreis\ ueberlagern\ -\ also\ schneiden\ -\ sonst\ <code>false</code>.\r\n
comment13.params=k
comment13.target=int\ berechneAbstandX(KREIS)
comment13.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Kreises\ in\ x-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ k\ \ \ Der\ andere\ Kreis\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ der\ beiden\ Kreise\ in\ x-Richtung\ (>0,\ wenn\ dieser\ Kreis\ rechts\ des\ anderen\ Kreises\ liegt)\r\n
comment14.params=r
comment14.target=int\ berechneAbstandX(RECHTECK)
comment14.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Rechtecks\ in\ x-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ r\ \ \ Das\ andere\ Rechteck\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Kreises\ zum\ anderen\ Rechteck\ in\ x-Richtung\ (>0,\ wenn\ dieser\ Kreis\ rechts\ des\ anderen\ Rechtecks\ liegt)\r\n
comment15.params=d
comment15.target=int\ berechneAbstandX(DREIECK)
comment15.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Dreiecks\ in\ x-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ d\ \ \ Das\ andere\ Dreieck\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Kreises\ zum\ anderen\ Dreieck\ in\ x-Richtung\ (>0,\ wenn\ dieser\ Kreis\ rechts\ des\ anderen\ Dreiecks\ liegt)\r\n
comment16.params=k
comment16.target=int\ berechneAbstandY(KREIS)
comment16.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Kreises\ in\ y-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ k\ \ \ Der\ andere\ Kreis\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ der\ beiden\ Kreise\ in\ y-Richtung\ (>0,\ wenn\ dieser\ Kreis\ unter\ dem\ anderen\ Kreis\ liegt)\r\n
comment17.params=r
comment17.target=int\ berechneAbstandY(RECHTECK)
comment17.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Rechtecks\ in\ y-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ r\ \ \ Das\ andere\ Rechteck\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Kreises\ vom\ anderen\ Rechteck\ in\ y-Richtung\ (>0,\ wenn\ dieser\ Kreis\ unter\ dem\ anderen\ Rechteck\ liegt)\r\n
comment18.params=d
comment18.target=int\ berechneAbstandY(DREIECK)
comment18.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Kreises\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Dreiecks\ in\ y-Richtung\ entfernt\ ist.\r\n\ @param\ \ \ d\ \ \ Das\ andere\ Dreieck\r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Kreises\ vom\ anderen\ Dreieck\ in\ y-Richtung\ (>0,\ wenn\ dieser\ Kreis\ unter\ dem\ anderen\ Dreieck\ liegt)\r\n
comment2.params=farbeNeu
comment2.target=void\ setzeFarbe(java.lang.String)
comment2.text=\r\n\ Setzt\ die\ Farbe\ dieses\ Kreises\ neu.\r\n\ @param\ \ \ farbeNeu\ \ \ \ Diese\ Farbe\ erhaelt\ der\ Kreis\ (z.B.\ "Rot")\r\n
comment3.params=m_x\ m_y
comment3.target=void\ setzeMittelpunkt(int,\ int)
comment3.text=\r\n\ Setzt\ den\ Mittelpunkt\ dieses\ Kreises\ neu.\r\n\ @param\ m_x\ \ \ Die\ X-Koordinate\ des\ Mittelpunktes.\r\n\ @param\ m_y\ \ \ Die\ Y-Koordinate\ des\ Mittelpunktes.\r\n
comment4.params=radius
comment4.target=void\ setzeRadius(int)
comment4.text=\r\n\ Setzt\ den\ Radius\ dieses\ Kreises\ neu.\r\n\ @param\ \ \ radius\ \ Der\ neue\ Radius\ (in\ Pixel)\r\n
comment5.params=sichtbarNeu
comment5.target=void\ setzeSichtbar(boolean)
comment5.text=\r\n\ Setzt,\ ob\ dieser\ Kreis\ sichtbar\ sein\ soll.\r\n\ @param\ \ \ sichtbarNeu\ Ist\ dieser\ Wert\ <code>true</code>,\ ist\ nach\ dem\ Aufruf\ dieser\ Methode\ dieser\ Kreis\ \r\n\ sichtbar.\ Ist\ dieser\ Wert\ <code>false</code>,\ so\ ist\ nach\ dem\ Aufruf\ dieser\ Methode\ dieser\ Kreis\ unsichtbar.\r\n
comment6.params=deltaX\ deltaY
comment6.target=void\ verschiebenUm(int,\ int)
comment6.text=\r\n\ Verschiebt\ diesen\ Kreis\ um\ eine\ Verschiebung\ -\ angegeben\ durch\ ein\ "Delta\ X"\ und\ "Delta\ Y".\r\n\ @param\ \ \ deltaX\ \ Der\ X\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ rechts,\ negative\ nach\ links.\r\n\ @param\ \ \ deltaY\ \ Der\ Y\ Anteil\ dieser\ Verschiebung.\ Positive\ Werte\ verschieben\ nach\ unten,\ negative\ nach\ oben.\r\n
comment7.params=
comment7.target=ea.edu.KreisE\ symbol()
comment7.text=\r\n\ Gibt\ das\ Symbol\ dieses\ Kreises\ als\ grafisches\ Objekt\ aus.\r\n\ @return\ \ Das\ Symbol\ dieses\ Kreises\ als\ grafisches\ Objekt.\r\n
comment8.params=
comment8.target=int\ nenneM_x()
comment8.text=\r\n\ Diese\ Methode\ gibt\ die\ x-Koordinate\ des\ Mittelpunkts\ dieses\ Kreises\ zurueck\r\n\ @return\ \ Die\ aktuelle\ x-Koordinate\ des\ Mittelpunktes\ dieses\ Kreises\r\n
comment9.params=
comment9.target=int\ nenneM_y()
comment9.text=\r\n\ Diese\ Methode\ gibt\ die\ y-Koordinate\ des\ Mittelpunkts\ dieses\ Kreises\ zurueck\r\n\ @return\ \ Die\ aktuelle\ y-Koordinate\ des\ Mittelpunktes\ dieses\ Kreises\r\n
numComments=19
