#BlueJ class context
comment0.params=
comment0.target=TAXI()
comment0.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ TAXI\r\n
comment1.params=name
comment1.target=TAXI(java.lang.String)
comment1.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ TAXI\r\n\ \r\n\ @param\ \ \ name\ \ \ Name\ des\ Taxifahrers\ ("Eva",\ "Jan",\ "Mia",\ "Tim",\ "Tom")\r\n
comment10.params=
comment10.target=void\ wegfahren()
comment10.text=\r\n\ Das\ Auto\ faehrt\ nach\ links\ aus\ dem\ Fenster.\r\n\r\n
comment11.params=
comment11.target=void\ einfahren()
comment11.text=\r\n\ Das\ Auto\ faehrt\ von\ rechts\ ins\ Fenster\ ein\r\n\r\n
comment2.params=name\ x\ y
comment2.target=TAXI(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ TAXI\r\n\ \r\n\ @param\ \ \ name\ \ \ \ Name\ des\ Taxifahrers\ ("Eva",\ "Jan",\ "Mia",\ "Tim",\ "Tom")\r\n\ @param\ \ \ x\ \ \ \ \ \ \ x-Koordinate\ des\ Mittelpunkts\ der\ Grafik\r\n\ @param\ \ \ y\ \ \ \ \ \ \ y-Koordinate\ des\ Mittelpunkts\ der\ Grafik\r\n
comment3.params=nummer\ x\ y
comment3.target=TAXI(int,\ int,\ int)
comment3.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ TAXI\r\n\ \r\n\ @param\ \ \ nummer\ \ Nummer\ des\ Taxifahrers\ (0\="Eva",\ 1\="Jan",\ 2\="Mia",\ 3\="Tim",\ 4\="Tom")\r\n\ @param\ \ \ x\ \ \ \ \ \ \ x-Koordinate\ des\ Mittelpunkts\ der\ Grafik\r\n\ @param\ \ \ y\ \ \ \ \ \ \ y-Koordinate\ des\ Mittelpunkts\ der\ Grafik\r\n
comment4.params=x\ y
comment4.target=void\ verschiebenUm(int,\ int)
comment4.text=\r\n\ Laesst\ das\ Taxi\ in\ eine\ beliebige\ Richtung\ fahren\r\n\r\n\ @param\ \ \ x\ \ \ Anzahl\ der\ Pixel\ in\ x-Richtung\r\n\ @param\ \ \ y\ \ \ Anzahl\ der\ Pixel\ in\ x-Richtung\r\n
comment5.params=winkel
comment5.target=void\ drehen(double)
comment5.text=\r\n\ Dreht\ das\ Taxi\ ausgehend\ vom\ aktuellen\ Drehwinkel\ \r\n\ um\ einen\ bestimmten\ Winkel.\r\n\r\n\ @param\ \ \ winkel\ \ Der\ Winkel,\ um\ den\ das\ Taxi\ gedreht\ werden\ soll\r\n
comment6.params=t
comment6.target=boolean\ schneidet(TAXI)
comment6.text=\r\n\ Prueft,\ ob\ das\ eine\ Taxi\ ein\ anderes\ Taxi\ schneidet.\r\n\r\n\ @param\ t\ Ein\ Parameter\r\n\ @return\ Der\ R\u00FCckgabewert\r\n
comment7.params=
comment7.target=BILD\ referenzAufBild()
comment7.text=\r\n\ Gibt\ eine\ Referenz\ auf\ das\ Bild\ des\ Taxis.\ \r\n\ Bilder\ verfuegen\ ueber\ eine\ Methode\ zum\ Kollisionstest.\ \r\n\ Diese\ Methode\ wird\ nur\ intern\ von\ 'schneidet(...)'\ benoetigt,\ \r\n\ muss\ aber\ dennoch\ public\ sein.\ \r\n\ Es\ gibt\ keinen\ Sinn,\ diese\ Methode\ direkt\ aufzurufen\!\r\n\ \r\n\ @return\ \ Referenz\ auf\ das\ Bild\ des\ Taxis\r\n\r\n
comment8.params=ms
comment8.target=void\ warte(int)
comment8.text=\r\n\ Das\ Auto\ wartet\ einige\ Millisekunden,\ bis\ die\ naechste\ Methode\ ausgefuehrt\ wird\r\n\r\n\ @param\ \ \ ms\ \ Wartedauer\ in\ Millisekunden\r\n
comment9.params=
comment9.target=void\ aufruecken()
comment9.text=\r\n\ Das\ Auto\ rueckt\ nach\ links\ auf.\ \r\n\ Dabei\ faehrt\ es\ 160\ Pixel\ nach\ links.\r\n\r\n
numComments=12
